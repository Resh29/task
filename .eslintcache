[{"E:\\проекты\\task-management\\src\\pages\\Home.js":"1","E:\\проекты\\task-management\\src\\context\\DataContext.js":"2","E:\\проекты\\task-management\\src\\components\\TasksList.js":"3","E:\\проекты\\task-management\\src\\components\\TaskItem.js":"4","E:\\проекты\\task-management\\src\\context\\AuthContext.js":"5","E:\\проекты\\task-management\\src\\pages\\NoMatch.js":"6","E:\\проекты\\task-management\\src\\components\\Header.js":"7","E:\\проекты\\task-management\\src\\pages\\PersonalList.js":"8","E:\\проекты\\task-management\\src\\pages\\AuthPage.js":"9","E:\\проекты\\task-management\\src\\App.js":"10","E:\\проекты\\task-management\\src\\pages\\CreatePage.js":"11","E:\\проекты\\task-management\\src\\hooks\\message.hook.js":"12","E:\\проекты\\task-management\\src\\hooks\\db.get.js":"13","E:\\проекты\\task-management\\src\\index.js":"14","E:\\проекты\\task-management\\src\\components\\Loader.js":"15","E:\\проекты\\task-management\\src\\routes.js":"16","E:\\проекты\\task-management\\src\\reportWebVitals.js":"17"},{"size":1946,"mtime":1610832413504,"results":"18","hashOfConfig":"19"},{"size":366,"mtime":1610743794219,"results":"20","hashOfConfig":"19"},{"size":936,"mtime":1610566231985,"results":"21","hashOfConfig":"19"},{"size":2115,"mtime":1610566182789,"results":"22","hashOfConfig":"19"},{"size":589,"mtime":1610833942810,"results":"23","hashOfConfig":"19"},{"size":475,"mtime":1608931740204,"results":"24","hashOfConfig":"19"},{"size":2420,"mtime":1610834170527,"results":"25","hashOfConfig":"19"},{"size":1786,"mtime":1610656620592,"results":"26","hashOfConfig":"19"},{"size":3830,"mtime":1610834000226,"results":"27","hashOfConfig":"19"},{"size":1525,"mtime":1610834112837,"results":"28","hashOfConfig":"19"},{"size":5619,"mtime":1610319560758,"results":"29","hashOfConfig":"19"},{"size":703,"mtime":1610742959241,"results":"30","hashOfConfig":"19"},{"size":681,"mtime":1610743024656,"results":"31","hashOfConfig":"19"},{"size":691,"mtime":1610830032261,"results":"32","hashOfConfig":"19"},{"size":592,"mtime":1610134289738,"results":"33","hashOfConfig":"19"},{"size":1034,"mtime":1610318941620,"results":"34","hashOfConfig":"19"},{"size":362,"mtime":1606769629921,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"y23ht3",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\проекты\\task-management\\src\\pages\\Home.js",["75","76"],"E:\\проекты\\task-management\\src\\context\\DataContext.js",[],"E:\\проекты\\task-management\\src\\components\\TasksList.js",["77","78","79","80","81"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TaskItem } from './TaskItem';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nexport const TasksList = ({\r\n  props = { class: '', header: '', tasks: [] },\r\n  someVoid,\r\n}) => {\r\n  const [styles, setStyles] = useState(['collection-header', props.class]);\r\n  const [currentStyles, setCurr] = useState(\r\n    styles.toString().split(',').join(' ')\r\n  );\r\n\r\n  const { state, isAdmin, changeToken } = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"collapsible collection with-header\">\r\n      <li className={currentStyles}>\r\n        <h6>{props.header}:</h6>\r\n      </li>\r\n\r\n      {props.tasks.length\r\n        ? props.tasks.map((task) => (\r\n            <TaskItem\r\n              props={{ ...task, isAdmin }}\r\n              someVoid={someVoid}\r\n              key={task.customerId}\r\n            />\r\n          ))\r\n        : null}\r\n    </ul>\r\n  );\r\n};\r\n",["82","83"],"E:\\проекты\\task-management\\src\\components\\TaskItem.js",["84","85","86","87"],"import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useSetData } from '../hooks/db.set';\r\n\r\nexport const TaskItem = ({ props, someVoid }) => {\r\n  const [style, setStyle] = useState('collapsible-body');\r\n  const { state } = useContext(AuthContext);\r\n  const set = useSetData;\r\n  function setData() {\r\n    set(`users/${state.uid}/tasks/${props.taskId}`, props);\r\n  }\r\n\r\n  function toggle() {\r\n    !style.includes('open')\r\n      ? setStyle(style + ' open')\r\n      : setStyle(style.replace('open', ''));\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"collapsible-header\">\r\n        {props.status === 'awaiting' ? (\r\n          <a href=\"#\" className=\"to-detail\">\r\n            <i\r\n              className=\"text-green small material-icons\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                someVoid(props);\r\n              }}\r\n            >\r\n              done\r\n            </i>\r\n          </a>\r\n        ) : (\r\n          <a className=\"to-detail\" href=\"#\">\r\n            <i\r\n              className=\" small material-icons\"\r\n              onClick={(e) => {\r\n                e.isPropagationStopped();\r\n                e.preventDefault();\r\n              }}\r\n            >\r\n              create\r\n            </i>\r\n          </a>\r\n        )}\r\n\r\n        <span>\r\n          <h6> {props.title}</h6>\r\n        </span>\r\n        <span>\r\n          Type: {props.type} <br></br> Date: {props.date}\r\n        </span>\r\n\r\n        <a\r\n          href=\"#\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            toggle();\r\n          }}\r\n        >\r\n          details...\r\n        </a>\r\n      </div>\r\n      <div className={style}>\r\n        <span>\r\n          ID {props.taskId} Address: {props.address}\r\n        </span>\r\n        <span> Client info: {props.customer}</span>\r\n        <span>Client ID: {props.customerId} </span>\r\n        <p> Tech.info: {props.techInfo} </p>\r\n        <strong> Status: {props.status} </strong>\r\n        <p>Text: {props.text}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","E:\\проекты\\task-management\\src\\context\\AuthContext.js",["88"],"E:\\проекты\\task-management\\src\\pages\\NoMatch.js",[],["89","90"],"E:\\проекты\\task-management\\src\\components\\Header.js",["91","92","93","94"],"E:\\проекты\\task-management\\src\\pages\\PersonalList.js",["95","96","97"],"E:\\проекты\\task-management\\src\\pages\\AuthPage.js",["98","99"],"E:\\проекты\\task-management\\src\\App.js",["100","101","102","103"],"E:\\проекты\\task-management\\src\\pages\\CreatePage.js",["104","105","106"],"import React, { useEffect, useState } from 'react';\r\nimport { TasksList } from '../components/TasksList';\r\nimport firebase from 'firebase';\r\nimport { useSetData } from '../hooks/db.set';\r\n\r\nexport const Create = () => {\r\n  const [state, setState] = useState(null);\r\n\r\n  const localState = () => {\r\n    return JSON.parse(localStorage.getItem('newTasks')) || [];\r\n  };\r\n  const [tasks, setTasks] = useState(localState);\r\n  const [textLength, setTextLength] = useState(140);\r\n  useEffect(() => {\r\n    let elems = document.querySelectorAll('select');\r\n    const instances = window.M.FormSelect.init(elems);\r\n  });\r\n\r\n  const changeHandler = (e) => {\r\n    setState({ ...state, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const addTask = (e) => {\r\n    e.preventDefault();\r\n    const date = new Date(Date.now()).toLocaleDateString();\r\n    const taskId = Date.now();\r\n    const status = 'awaiting';\r\n\r\n    const newTasks = { ...state, date, taskId, status };\r\n    localStorage.setItem('newTasks', JSON.stringify([...tasks, newTasks]));\r\n    setTasks(localState);\r\n    setState(null);\r\n    e.target.reset();\r\n  };\r\n\r\n  const set = useSetData('/test', { test: 'done' });\r\n\r\n  const saveTasks = async () => {\r\n    try {\r\n      for (const task of tasks) {\r\n        let taskNumber = (\r\n          await firebase.database().ref('task_number').once('value')\r\n        ).val();\r\n        await firebase\r\n          .database()\r\n          .ref(`tasks/${taskNumber + 1}`)\r\n          .set(task);\r\n        await firebase\r\n          .database()\r\n          .ref('task_number')\r\n          .set(taskNumber + 1);\r\n      }\r\n\r\n      deleteTasks();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const deleteTasks = () => {\r\n    localStorage.removeItem('newTasks');\r\n    setTasks([]);\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <form\r\n        className=\"col s12\"\r\n        style={{ marginTop: '2rem' }}\r\n        onSubmit={addTask}\r\n      >\r\n        <h3> New task </h3>\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s12 m6\">\r\n            <input\r\n              id=\"title\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              required\r\n              className=\"validate\"\r\n              onChange={changeHandler}\r\n            />\r\n            <label htmlFor=\"title\">title</label>\r\n          </div>\r\n          <div className=\"input-field col s12 m6\">\r\n            <select name=\"type\" id=\"type\" required onChange={changeHandler}>\r\n              <option selected disabled required>\r\n                {' '}\r\n                Choose task type{' '}\r\n              </option>\r\n              <option defaultValue=\"repair\">repair</option>\r\n              <option defaultValue=\"build\">build</option>\r\n              <option defaultValue=\"distroy\">distroy</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"input-field col s12 m6\">\r\n            <input\r\n              required\r\n              id=\"address\"\r\n              type=\"text\"\r\n              name=\"address\"\r\n              className=\"validate\"\r\n              onChange={changeHandler}\r\n            />\r\n            <label htmlFor=\"address\">address</label>\r\n          </div>\r\n          <div className=\"input-field col s12 m6\">\r\n            <input\r\n              required\r\n              id=\"techInfo\"\r\n              type=\"text\"\r\n              name=\"techInfo\"\r\n              className=\"validate\"\r\n              onChange={changeHandler}\r\n            />\r\n            <label htmlFor=\"techInfo\">techInfo</label>\r\n          </div>\r\n          <div className=\"input-field col s12 m6\">\r\n            <input\r\n              required\r\n              id=\"customer\"\r\n              type=\"text\"\r\n              name=\"customer\"\r\n              className=\"validate\"\r\n              onChange={changeHandler}\r\n            />\r\n            <label htmlFor=\"customer\">customer</label>\r\n          </div>\r\n          <div className=\"input-field col s12 m6\">\r\n            <input\r\n              required\r\n              id=\"customerId\"\r\n              type=\"text\"\r\n              name=\"customerId\"\r\n              className=\"validate\"\r\n              onChange={changeHandler}\r\n            />\r\n            <label htmlFor=\"customerId\">customerId</label>\r\n          </div>\r\n          <div className=\"input-field col s12 m6\">\r\n            <textarea\r\n              required\r\n              id=\"text\"\r\n              type=\"text\"\r\n              name=\"text\"\r\n              className=\"validate materialize-textarea\"\r\n              onChange={changeHandler}\r\n              maxLength={textLength}\r\n            />\r\n            {state && state.text && state.text.length ? (\r\n              <span className=\"character-counter\" style={{ float: 'right' }}>\r\n                {state.text.length} / {textLength}\r\n              </span>\r\n            ) : null}\r\n\r\n            <label htmlFor=\"text\">text</label>\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Add task\"\r\n            className=\"btn\"\r\n            style={{ marginLeft: '1rem' }}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n      <TasksList\r\n        props={{\r\n          class: 'white black-text',\r\n          header: 'New tasks',\r\n          tasks,\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          justifyContent: 'space-between',\r\n          display: 'flex',\r\n          padding: '1rem',\r\n        }}\r\n      >\r\n        <button className=\"btn\" onClick={saveTasks}>\r\n          {' '}\r\n          Save{' '}\r\n        </button>\r\n        <button className=\"btn red\" onClick={deleteTasks}>\r\n          {' '}\r\n          Delete{' '}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","E:\\проекты\\task-management\\src\\hooks\\message.hook.js",[],"E:\\проекты\\task-management\\src\\hooks\\db.get.js",[],"E:\\проекты\\task-management\\src\\index.js",[],"E:\\проекты\\task-management\\src\\components\\Loader.js",[],"E:\\проекты\\task-management\\src\\routes.js",["107"],"E:\\проекты\\task-management\\src\\reportWebVitals.js",[],{"ruleId":"108","severity":1,"message":"109","line":1,"column":38,"nodeType":"110","messageId":"111","endLine":1,"endColumn":48},{"ruleId":"108","severity":1,"message":"112","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":21},{"ruleId":"108","severity":1,"message":"113","line":1,"column":39,"nodeType":"110","messageId":"111","endLine":1,"endColumn":48},{"ruleId":"108","severity":1,"message":"114","line":9,"column":18,"nodeType":"110","messageId":"111","endLine":9,"endColumn":27},{"ruleId":"108","severity":1,"message":"115","line":10,"column":25,"nodeType":"110","messageId":"111","endLine":10,"endColumn":32},{"ruleId":"108","severity":1,"message":"116","line":14,"column":11,"nodeType":"110","messageId":"111","endLine":14,"endColumn":16},{"ruleId":"108","severity":1,"message":"117","line":14,"column":27,"nodeType":"110","messageId":"111","endLine":14,"endColumn":38},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"108","severity":1,"message":"122","line":9,"column":12,"nodeType":"110","messageId":"111","endLine":9,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":23,"column":11,"nodeType":"125","endLine":23,"endColumn":45},{"ruleId":"123","severity":1,"message":"124","line":35,"column":11,"nodeType":"125","endLine":35,"endColumn":45},{"ruleId":"123","severity":1,"message":"124","line":55,"column":9,"nodeType":"125","endLine":62,"endColumn":10},{"ruleId":"108","severity":1,"message":"126","line":5,"column":7,"nodeType":"110","messageId":"111","endLine":5,"endColumn":19},{"ruleId":"118","replacedBy":"127"},{"ruleId":"120","replacedBy":"128"},{"ruleId":"108","severity":1,"message":"129","line":14,"column":13,"nodeType":"110","messageId":"111","endLine":14,"endColumn":22},{"ruleId":"123","severity":1,"message":"124","line":43,"column":15,"nodeType":"125","endLine":43,"endColumn":81},{"ruleId":"123","severity":1,"message":"124","line":54,"column":19,"nodeType":"125","endLine":60,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":78,"column":11,"nodeType":"125","endLine":84,"endColumn":12},{"ruleId":"108","severity":1,"message":"130","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":16},{"ruleId":"108","severity":1,"message":"117","line":11,"column":18,"nodeType":"110","messageId":"111","endLine":11,"endColumn":29},{"ruleId":"108","severity":1,"message":"131","line":16,"column":13,"nodeType":"110","messageId":"111","endLine":16,"endColumn":21},{"ruleId":"108","severity":1,"message":"132","line":9,"column":18,"nodeType":"110","messageId":"111","endLine":9,"endColumn":26},{"ruleId":"108","severity":1,"message":"133","line":9,"column":28,"nodeType":"110","messageId":"111","endLine":9,"endColumn":35},{"ruleId":"108","severity":1,"message":"134","line":2,"column":29,"nodeType":"110","messageId":"111","endLine":2,"endColumn":37},{"ruleId":"108","severity":1,"message":"113","line":2,"column":39,"nodeType":"110","messageId":"111","endLine":2,"endColumn":48},{"ruleId":"108","severity":1,"message":"135","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":16},{"ruleId":"108","severity":1,"message":"133","line":24,"column":28,"nodeType":"110","messageId":"111","endLine":24,"endColumn":35},{"ruleId":"108","severity":1,"message":"136","line":13,"column":22,"nodeType":"110","messageId":"111","endLine":13,"endColumn":35},{"ruleId":"108","severity":1,"message":"129","line":16,"column":11,"nodeType":"110","messageId":"111","endLine":16,"endColumn":20},{"ruleId":"108","severity":1,"message":"137","line":36,"column":9,"nodeType":"110","messageId":"111","endLine":36,"endColumn":12},{"ruleId":"108","severity":1,"message":"117","line":11,"column":27,"nodeType":"110","messageId":"111","endLine":11,"endColumn":38},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'DataContext' is defined but never used.","'useEffect' is defined but never used.","'setStyles' is assigned a value but never used.","'setCurr' is assigned a value but never used.","'state' is assigned a value but never used.","'changeToken' is assigned a value but never used.","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"'setData' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'initialState' is assigned a value but never used.",["138"],["139"],"'instances' is assigned a value but never used.","'firebase' is defined but never used.","'instance' is assigned a value but never used.","'setState' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'useState' is defined but never used.","'Loader' is defined but never used.","'setTextLength' is assigned a value but never used.","'set' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]